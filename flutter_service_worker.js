"use strict";const MANIFEST="flutter-app-manifest";const TEMP="flutter-temp-cache";const CACHE_NAME="flutter-app-cache";const RESOURCES={"favicon.png":"5dcef449791fa27946b3d35ad8803796","index.html":"d122795b08225baef98eabca4cfc4814","/":"d122795b08225baef98eabca4cfc4814","assets/AssetManifest.json":"7205790779603028c097a1852dffd938","assets/FontManifest.json":"dc3d03800ccca4601324923c0b1d6d57","assets/assets/github_badge.png":"724794164fb289dd2f7d69dde7ac3bc0","assets/assets/github_badge-fs8.png":"8de338a617e1e68af8a55ea036b14b36","assets/assets/github_badge.jpg":"5dc9ced103d8a6eb5ae69153a72e35f3","assets/assets/yt.png":"c47b1b0b9230c909ab186656e1efa097","assets/assets/gpm-fs8.png":"6253a430a2b9ecfa23ccbc54adf677ea","assets/assets/gpm.png":"13c31a38fa3f5e868f8f83397da7e8d2","assets/assets/android/samplelogin/1.jpg":"e294f5581f22f0e201bf167e78edd029","assets/assets/android/samplelogin/0.jpg":"0f70c927b95f5c0aeae9c3dca8741c09","assets/assets/android/samplelogin/2.jpg":"0b1824d28024c471e99f70930924b636","assets/assets/android/samplelogin/3.jpg":"cf88048fb3f0ba9db4126bd0faea3e49","assets/assets/android/cf/1.jpg":"db1f7ac41771b1912e4e4c5a471a1346","assets/assets/android/cf/0.jpg":"09b4fae02469b2aea1a0067ab30a86c1","assets/assets/android/cf/2.jpg":"1a701fb924da07c5a84542f775c2077a","assets/assets/android/sitedog/1.jpg":"480f8f31fc7e92145c61ad51fa0d3e18","assets/assets/android/sitedog/0.jpg":"90eef2e31d383887804c80fb99ca2a0f","assets/assets/android/sitedog/2.jpg":"a8a45296b328055be96f3eef7fa1f63a","assets/assets/android/sitedog/3.jpg":"30aaffaa0503e111e7cc97550f70dcd7","assets/assets/android/stavride/1.jpg":"21de797bd053fc242dbb1578d0df81c3","assets/assets/android/stavride/0.jpg":"7841b5cde61433313a7343451d621e28","assets/assets/android/stavride/7.jpg":"df92ccddb0832a0889504e563dd5a0db","assets/assets/android/stavride/5.jpg":"9dbd83ff4617a6838b83898061849318","assets/assets/android/stavride/4.jpg":"52863f422f118e3022ed5d758449c48d","assets/assets/android/stavride/2.jpg":"14366d07c486892b5acf9ea4fd6803dd","assets/assets/android/stavride/3.jpg":"519aac762b973188bbc25dcb92c1fe81","assets/assets/android/stavride/6.jpg":"ad378a741053c06e5b03e09a2e5cbec5","assets/assets/android/newsbuzz/1.jpg":"10aef72a824a4d986a9373c296b95770","assets/assets/android/newsbuzz/0.jpg":"8d1565963a9ba4b352f9c2d5f9f88ed1","assets/assets/android/newsbuzz/4.jpg":"4c3cc7f505845daf444b3feb1fc83039","assets/assets/android/newsbuzz/2.jpg":"6977809416532372e895543e08974de6","assets/assets/android/newsbuzz/3.jpg":"e23661b5b27953144622612172f89047","assets/assets/github_badge_dark.png":"502489a40f1d6cc45f4c224991fb13ca","assets/assets/yt-fs8.png":"248ef463fe6f9be17eed96abf830eda1","assets/NOTICES":"b0010a32a559ba7292903c744f844e64","assets/fonts/MaterialIcons-Regular.otf":"1288c9e28052e028aba623321f7826ac","assets/packages/flutter_inappwebview/t_rex_runner/t-rex.css":"5a8d0222407e388155d7d1395a75d5b9","assets/packages/flutter_inappwebview/t_rex_runner/t-rex.html":"16911fcc170c8af1c5457940bd0bf055","assets/packages/cupertino_icons/assets/CupertinoIcons.ttf":"b14fcf3ee94e3ace300b192e9e7c8c5d","main.dart.js":"98654c91a3d491b842213b559e3bcda2","icons/Icon-512.png":"96e752610906ba2a93c65f8abe1645f1","icons/Icon-192.png":"ac9a721a12bbc803b44f645561ecb1e1","version.json":"9bd366ae7e2bd098e01fc371564007ea","manifest.json":"25657114ea89185a3af245fc491ed675"};const CORE=["/","main.dart.js","index.html","assets/NOTICES","assets/AssetManifest.json","assets/FontManifest.json"];self.addEventListener("install",(event=>{self.skipWaiting();return event.waitUntil(caches.open(TEMP).then((cache=>cache.addAll(CORE.map((value=>new Request(value+"?revision="+RESOURCES[value],{cache:"reload"})))))))}));self.addEventListener("activate",(function(event){return event.waitUntil(async function(){try{var contentCache=await caches.open(CACHE_NAME);var tempCache=await caches.open(TEMP);var manifestCache=await caches.open(MANIFEST);var manifest=await manifestCache.match("manifest");if(!manifest){await caches.delete(CACHE_NAME);contentCache=await caches.open(CACHE_NAME);for(var request of await tempCache.keys()){var response=await tempCache.match(request);await contentCache.put(request,response)}await caches.delete(TEMP);await manifestCache.put("manifest",new Response(JSON.stringify(RESOURCES)));return}var oldManifest=await manifest.json();var origin=self.location.origin;for(var request of await contentCache.keys()){var key=request.url.substring(origin.length+1);if(key==""){key="/"}if(!RESOURCES[key]||RESOURCES[key]!=oldManifest[key]){await contentCache.delete(request)}}for(var request of await tempCache.keys()){var response=await tempCache.match(request);await contentCache.put(request,response)}await caches.delete(TEMP);await manifestCache.put("manifest",new Response(JSON.stringify(RESOURCES)));return}catch(err){console.error("Failed to upgrade service worker: "+err);await caches.delete(CACHE_NAME);await caches.delete(TEMP);await caches.delete(MANIFEST)}}())}));self.addEventListener("fetch",(event=>{if(event.request.method!=="GET"){return}var origin=self.location.origin;var key=event.request.url.substring(origin.length+1);if(key.indexOf("?v=")!=-1){key=key.split("?v=")[0]}if(event.request.url==origin||event.request.url.startsWith(origin+"/#")||key==""){key="/"}if(!RESOURCES[key]){return}if(key=="/"){return onlineFirst(event)}event.respondWith(caches.open(CACHE_NAME).then((cache=>cache.match(event.request).then((response=>response||fetch(event.request).then((response=>{cache.put(event.request,response.clone());return response})))))))}));self.addEventListener("message",(event=>{if(event.data==="skipWaiting"){self.skipWaiting();return}if(event.data==="downloadOffline"){downloadOffline();return}}));async function downloadOffline(){var resources=[];var contentCache=await caches.open(CACHE_NAME);var currentContent={};for(var request of await contentCache.keys()){var key=request.url.substring(origin.length+1);if(key==""){key="/"}currentContent[key]=true}for(var resourceKey in Object.keys(RESOURCES)){if(!currentContent[resourceKey]){resources.push(resourceKey)}}return contentCache.addAll(resources)}function onlineFirst(event){return event.respondWith(fetch(event.request).then((response=>caches.open(CACHE_NAME).then((cache=>{cache.put(event.request,response.clone());return response})))).catch((error=>caches.open(CACHE_NAME).then((cache=>cache.match(event.request).then((response=>{if(response!=null){return response}throw error})))))))}
